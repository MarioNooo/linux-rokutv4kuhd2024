#ifndef _MDRV_HW_PQ_ST_H_
#define _MDRV_HW_PQ_ST_H_

typedef enum {
	E_HW_CFD_HDR_POSITION_IP = 0,
	E_HW_CFD_HDR_POSITION_OP = 1,
	E_HW_CFD_HDR_POSITION_MAX,
} EN_HW_CFD_HDR_POSITION;

typedef enum {
	E_HW_CFD_HDR_PATH_NONE,
	E_HW_CFD_HDR_PATH_DOLBY_HDMI_STANDARD,
	E_HW_CFD_HDR_PATH_DOLBY_HDMI_LOWLATENCY_YUV,
	E_HW_CFD_HDR_PATH_DOLBY_HDMI_LOWLATENCY_RGB,
	E_HW_CFD_HDR_PATH_DOLBY_OTT_SINGLE,
	E_HW_CFD_HDR_PATH_DOLBY_OTT_DUAL,
	E_HW_CFD_HDR_PATH_OPEN_HDMI,
	E_HW_CFD_HDR_PATH_OPEN_OTT,
	E_HW_CFD_HDR_PATH_NON_HDR_HDMI,	// This is used when non HDR HDMI input source.
	E_HW_CFD_HDR_PATH_DOLBY_OTT_UI_OFF,
	E_HW_CFD_HDR_PATH_DOLBY_HDMI_UI_OFF,
	E_HW_CFD_HDR_PATH_TCH_MVOP,
	E_HW_CFD_HDR_PATH_NON_HDR_OTT,
	E_HW_CFD_HDR_PATH_ANALOG,
	E_HW_CFD_HDR_PATH_HDR10_PLUS_HDMI,
	E_HW_CFD_HDR_PATH_HDR10_PLUS_OTT,
	E_HW_CFD_HDR_PATH_MAX,
} EN_HW_CFD_HDR_PATH;

typedef struct __attribute__ ((packed)) {
	MS_BOOL bInit;
	MS_U64 u64PhyBaseAddr;
	MS_U32 u32Size;
	MS_U8 u8MiuSel;
	MS_U8 *pu8VirBaseAddr;
	MS_U8 *pu8VirBaseAddrCached;
} ST_HW_EMP_DMA_INFO;

typedef struct
{
	MS_U8 u8FrameNumber;
	MS_U8 u8MiuSel;
	MS_U8 u8IPMCurFrameNum;
	MS_U32 u32Addr;
	MS_U8 u8BytePerWord;
} ST_HW_DMA_INFO;

#endif		//_MDRV_HW_PQ_ST_H_